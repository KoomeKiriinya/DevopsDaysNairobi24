autoscaling:
  enabled: true
  minReplicaCount: 2
  maxReplicaCount: 21
serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::{example-aws-account-id}:role/example-app"

image:
  repository: example-aws-account-id.dkr.ecr.eu-west-1.amazonaws.com/example-app
  tag: example-tag # pragma: allowlist secret
  pullPolicy: IfNotPresent
command: ["node", "server.js"]
service:
  enabled: true
  type: ClusterIP
  internalPort: 8080
  externalPort: 8080
health:
  enabled: true
  liveness: &health
    path: healthcheck
    initialDelaySeconds: 5
    periodSeconds: 10
    failureThreshold: 2
    successThreshold: 1
    timeoutSeconds: 5
  readiness:
    !!merge <<: *health
    periodSeconds: 30
externalSecrets:
  - name: '{{ .Release.Name }}'
    annotations:
      argocd.argoproj.io/compare-options: IgnoreExtraneous
      argocd.argoproj.io/sync-options: Prune=false
    labels: {}
    refreshInterval: 1h
    clusterSecretStore: aws-secret-manager-dev
    refs:
      - secretKey: API-KEY
        remoteRef:
          key: API-KEY
envFrom:
  - secretRef:
      name: '{{ .Release.Name }}'
envs:
  - name: ENVIRONMENT
    value: development
ingress:
  enabled: true
  annotations:
    traefik.ingress.kubernetes.io/router.tls: 'true'
    traefik.ingress.kubernetes.io/router.priority: '2'
    kubernetes.io/tls-acme: "true"
  tls:
    enabled: true
    hosts:
      - example-app.example.com
    secretName: example-app-certificate
  hosts:
    - host: example-app.example.com
      paths:
        - path: /
resources:
  limits:
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 512Mi
