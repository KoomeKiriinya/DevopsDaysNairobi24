{{- define "example-std-lib.ingress" -}}
{{- $fullName := include "example.fullname" . -}}
{{- if .Values.ingress.enabled  -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "example.labels" . | nindent 4 }}
  {{- if .Values.ingress.annotations }}
  annotations:
    {{- toYaml .Values.ingress.annotations | nindent 4 }}
  {{- end }}
spec:
  {{- if (default .Values.ingress.tls.enabled false) }}
  tls:
    - hosts:
        {{- range .Values.ingress.tls.hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .Values.ingress.tls.secretName }}
    {{- with .Values.ingress.tls.extraHosts }}
      {{- toYaml . | nindent 4 }}
    {{- end}}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType | default "Prefix" }}
            backend:
              service:
                {{- if $.Values.service.externalName }}
                name: {{ default (printf "%s-external" $fullName) .serviceName }}
                port:
                  number: {{ default $.Values.service.externalPort .servicePort }}
                {{- else }}
                name: {{ default $fullName .serviceName }}
                port:
                  number: {{ default $.Values.service.externalPort .servicePort }}
                {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
{{- end }}